// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id String @id @default(uuid())
  username String @unique
  email String @unique
  password String
  createdAt DateTime @default(now())
  timezone String @default("UTC")

  events Event[]
  courses   Course[]
  taskEstimate TaskEstimate[]
}

model Tag {
  id String @id @default(uuid())
  name String @unique
  color String

  events Event[]
}

model Event {
  id String @id @default(uuid())
  userId String
  title String
  date DateTime @default(now())
  recurring Boolean
  color String
  type String // Currently can be an EVENT or TASK.
  tags Tag[] // Tags for filtering

  // New fields for tracking task completion
  estimatedTime Int? // Estimated time in hours
  difficulty Int? // Difficulty level (1-5)
  completed Boolean @default(false)

  // Possible new fields for future update
  description String?
  start DateTime?
  end DateTime?

  user User @relation(fields: [userId], references: [id])
}

model TaskEstimate{
  id String @id @default(uuid())
  userId String

  multiplier1 Decimal @default(1.0)
  multiplier2 Decimal @default(1.0)
  multiplier3 Decimal @default(1.0)
  multiplier4 Decimal @default(1.0)
  multiplier5 Decimal @default(1.0)

  divider1 Int @default(0)
  divider2 Int @default(0)
  divider3 Int @default(0)
  divider4 Int @default(0)
  divider5 Int @default(0)

  user User @relation(fields: [userId], references: [id])
}

model Course {
  id    String  @id @default(uuid())
  name  String  @unique
  tag   String  @unique
  colour String 

  userId String
  user   User    @relation(fields: [userId], references: [id]) // Each course is associated with one user
}